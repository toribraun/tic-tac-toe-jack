class Game {
    static Board board;

    function void init() {
		do MessageHandler.init();
		return;
	}

    function boolean takeAStep(boolean isCross) {
        var boolean stepIsCorrect;
        var int row, column;
        let stepIsCorrect = false;
        while (~stepIsCorrect) {
            let row = MessageHandler.readDigitInput("Press number of row you want to take step");
            let column = MessageHandler.readDigitInput("Press number of column you want to take step");
            let stepIsCorrect = board.isCellFree(row - 1, column - 1);
        }
        do board.drawMove(row, column, isCross);
        return board.isWin(row, column);
    }

    method void startGame() {
        var int boardSize, stepResult;
        var boolean gameOver, isCross;
        while (true) {
            let boardSize = MessageHandler.readDigitInput("Press number of board size and start!");
            let board = Board.new(boardSize);
            do board.drawBoard();
            let gameOver = false;
            let isCross = true;
            while (~gameOver) {
                let stepResult = Game.takeAStep(isCross);
                if (stepResult) {
                    let gameOver = true;
                    do MessageHandler.readEnterInput("Win! Press ENTER to start new game!");
                }

                if ((~stepResult) & (board.isFieldOccupied())) {
                    let gameOver = true;
                    do MessageHandler.readEnterInput("Dead heat! Press ENTER to start new game!");
                }
                let isCross = ~isCross;
            }
            do board.clearBoard();
        }
        return;
    }
}
